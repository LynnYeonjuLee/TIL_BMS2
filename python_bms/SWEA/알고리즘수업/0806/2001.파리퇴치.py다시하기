def catchFlies(m):
    flies_sum = 0
    flies_sum_list = []
    # for k in range(1, m+1):
    for i in range(1, m+1):
        for j in range(1, m+1):
            flies_sum += flies_info[i][j]
            flies_sum_list.append(flies_sum)
    return flies_sum_list

# arr = [[1, 2, 3,4 , 5, 6]
#     , [1, 2, 3,4 , 5, 6]
#     , [1, 2, 3,4 , 5, 6]
#     , [1, 2, 3,4 , 5, 6]
#     , [1, 2, 3,4 , 5, 6]
#     , [1, 2, 3,4 , 5, 6]]
#     (1, 1) => (4, 3) 의 합을 구해라 ! 
#     for i in range(1, 4+1):
#         for j in range(1, 3+1):
#             sumV += arr[i][j]

T = int(input())

for test_case in range(1, T+1):
    N, M = list(map(int,input().split()))
    arr_flies = [[0] * N for _ in range(N)]
    # arr_catch = [[0] * M for _ in range(M)]
    flies_info = []
    flies_list = []
    for i in range(N):
        flies = list(map(int,input().split()))
        flies_info.append(flies)

    for flies in flies_info:
    #     flies_list.append(catchFlies(M))

        result = max(catchFlies(M))
    

    print(f'#{test_case} {result}')



    # sumV = 0
    # for i in range(1, 4+1):
    #     for j in range(1, 3+1):
    #         sumV += arr[i][j]

    # (sy, sx) => (sy+M, sx+M)
    # sumV = 0 
    # for i in range(sy, (sy+M)+1):
    #     for j in range(sx, (sx+M)+1):
    #         sumV += arr[i][j]
    
    # for sy in range(N):
    #     for sx in range(N):
    #         파리채 내의 합을 구한다. 



